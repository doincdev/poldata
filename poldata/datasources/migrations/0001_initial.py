# Generated by Django 5.2 on 2025-05-05 05:16

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('source_type', models.CharField(choices=[('twitter', 'Twitter'), ('facebook', 'Facebook'), ('instagram', 'Instagram'), ('news', 'News Website'), ('forum', 'Forum'), ('offline', 'Offline File')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('config', models.JSONField(blank=True, help_text='Configuration details such as API keys, URLs, file paths, etc.', null=True)),
                ('credibility_score', models.FloatField(default=0.0, help_text='Credibility scoring of source (0-100)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('validation_status', models.CharField(choices=[('pending', 'Pending'), ('valid', 'Valid'), ('invalid', 'Invalid'), ('error', 'Error')], default='pending', max_length=10)),
                ('last_connection_test', models.DateTimeField(blank=True, null=True)),
                ('last_connection_error', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('collection_frequency', models.CharField(choices=[('manual', 'Manual'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='manual', max_length=10)),
                ('next_collection', models.DateTimeField(blank=True, null=True)),
                ('analytics', models.JSONField(blank=True, default=dict, help_text='Aggregated analytics data for this source', null=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['source_type'], name='datasources_source__02c2be_idx'), models.Index(fields=['validation_status'], name='datasources_validat_932220_idx'), models.Index(fields=['collection_frequency'], name='datasources_collect_05e7fa_idx')],
            },
        ),
        migrations.CreateModel(
            name='CollectedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collected_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('raw_data', models.JSONField(help_text='Raw data collected from the source')),
                ('validation_status', models.CharField(choices=[('pending', 'Pending'), ('valid', 'Valid'), ('invalid', 'Invalid'), ('error', 'Error')], default='pending', max_length=10)),
                ('processed', models.BooleanField(default=False)),
                ('processing_errors', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata about the collection process', null=True)),
                ('source_url', models.URLField(blank=True, help_text='Original source URL if applicable', null=True)),
                ('content_hash', models.CharField(blank=True, help_text='Hash of the content for deduplication', max_length=64, null=True)),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collected_data', to='datasources.datasource')),
            ],
            options={
                'ordering': ['-collected_at'],
                'indexes': [models.Index(fields=['collected_at'], name='datasources_collect_69ee6a_idx'), models.Index(fields=['validation_status'], name='datasources_validat_716908_idx'), models.Index(fields=['content_hash'], name='datasources_content_4f7279_idx')],
            },
        ),
    ]
